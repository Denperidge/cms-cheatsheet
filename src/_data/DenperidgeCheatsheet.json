[
    {
        "id": "implementing-eleventy-auto-cache-buster",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-26T13:43:14",
        "date_updated": "2025-06-21T15:27:11",
        "links": null,
        "tags": [
            "Eleventy",
            "JavaScript"
        ],
        "problem": "Implementing eleventy-auto-cache-buster",
        "solution": "```js\nconst eleventyAutoCacheBuster = require(\"eleventy-auto-cache-buster\");\n// Alternatively, you can use ESM\nimport eleventyAutoCacheBuster from \"eleventy-auto-cache-buster\";\n\nmodule.exports = function (eleventyConfig) {\n    eleventyConfig.addPlugin(eleventyAutoCacheBuster);\n}\n```",
        "related": []
    },
    {
        "id": "pre-rendering-markdown-in-eleventy",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-25T20:41:07",
        "date_updated": "2025-06-21T15:27:11",
        "links": null,
        "tags": [
            "JavaScript",
            "Markdown",
            "Eleventy"
        ],
        "problem": "Pre-rendering Markdown data in Eleventy",
        "solution": "```js\n// Example pre-rendering data\n// src/_data/eleventyComputed.js\nimport markdownit from \"markdown-it\";\nconst md = markdownit();\n\nexport default {\n    renderedPosts: (data) => {\n        const posts = data.posts.map(post => {\n            post.content = md.render(post.content);\n            return post;\n        })\n        return posts;\n    }\n}\n```\n\n```json\n// Example source data\n// src/_data/posts.json\n[\n  {\n    \"title\": \"Example\",\n    \"content\": \"## Example title\\nExample line\"\n  }\n]\n```\n\n```pug\n// Example template usage of pre-rendered data\n// src/example.pug\nfor post in renderedPosts\n    article\n        h2=post.title\n        div!=post.content\n```",
        "related": []
    },
    {
        "id": "esm-import-json",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-26T11:52:53",
        "date_updated": "2025-06-21T15:27:11",
        "links": [
            {
                "label": "Solution from Stefan Judis (stefanjudis.com)",
                "url": "https://www.stefanjudis.com/snippets/how-to-import-json-files-in-es-modules-node-js/"
            }
        ],
        "tags": [
            "JavaScript"
        ],
        "problem": "ESM import JSON",
        "solution": "```js\nconst {default: variableName} = await import(\"./data/data.json\", {assert: {type: \"json\"}})\nconsole.log(variableName);\n```",
        "related": []
    },
    {
        "id": "adding-secrets-to-github-actions",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-27T17:42:38",
        "date_updated": "2025-06-21T15:27:11",
        "links": null,
        "tags": [
            "DevOps",
            "GitHub-Actions"
        ],
        "problem": "Adding secrets to GitHub Actions",
        "solution": "1. Navigate to https://github.com/OWNER/REPO/settings/secrets/actions\n2. Add a *Repository secret*\n3. That's it! It can now be used in GitHub Actions\n\n```yml\n# .github/workflows/using-secrets.yml\nname: Example on using secrets\non:\n  workflow_dispatch:\n\njobs:\n  example:\n    runs-on: ubuntu-latest\n    steps:\n      - run: yarn directus-to-data --collection-output src/_data/{{collectionName}}.json -c CollectionName\n        env:\n          CMS_URL: ${{ secrets.CMS_URL }}\n          STATIC_TOKEN: ${{ secrets.STATIC_TOKEN }}\n\n```",
        "related": [
            3
        ]
    },
    {
        "id": "disabling-a-nixos-service-on-startup",
        "status": "published",
        "sort": null,
        "date_created": "2024-11-25T16:30:35",
        "date_updated": "2025-06-21T15:27:11",
        "links": [
            {
                "label": "Solution by cakee_ru (reddit.com/r/NixOS)",
                "url": "https://www.reddit.com/r/NixOS/comments/1be7rcb/comment/kurkzez/"
            }
        ],
        "tags": [
            "NixOS"
        ],
        "problem": "Disabling a NixOS service on startup",
        "solution": "```nix\n  services.jellyfin = {\n    enable = true;\n  };\n  # Disable service on startup\n  systemd.services.jellyfin.wantedBy = lib.mkForce [ ];\n```\nYou can change `jellyfin` to the service name of whichever service you wish to disable on startup.",
        "related": []
    },
    {
        "id": "linux-recursively-delete-empty-directories",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-03T16:10:19",
        "date_updated": "2025-06-21T15:27:11",
        "links": [
            {
                "label": "Solution by Baldrick (unix.stackexchange.com)",
                "url": "https://unix.stackexchange.com/a/46326"
            }
        ],
        "tags": [
            "Linux"
        ],
        "problem": "Linux: recursively delete empty directories ",
        "solution": "```bash\n# Print empty directories:\nfind . -type d -empty -print\n# Delete empty directories:\nfind . -type d -empty -delete\n```",
        "related": []
    },
    {
        "id": "deploy-eleventy-using-github-actions",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-27T15:25:37",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "DevOps",
            "Eleventy",
            "GitHub-Actions"
        ],
        "problem": "Deploy Eleventy using Github Actions",
        "solution": "Note: the first example uses yarn. For NPM, see below\n```yaml\n# Based on https://github.com/actions/starter-workflows/blob/main/pages/static.yml\nname: Build static & deploy to GitHub Pages\n\non:\n  # Runs on pushes targeting the default branch\n  push:\n    branches: [\"main\"]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n  # Allows this workflow to be called from other workflows\n  workflow_call:\n\n# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\n# Allow one concurrent deployment\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: true\n\njobs:\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          # Select latest ref instead of event trigger, in case this is triggered by another event\n          ref: ${{ github.ref }}\n      - uses: actions/setup-node@v4\n          \n      - name: Setup Pages\n        uses: actions/configure-pages@v5\n        \n      - name: Install pre-requirements\n        run: yarn install\n\n      - name: Build\n        run: yarn build\n        \n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          # Upload entire repository\n          path: 'dist/'\n\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\nNPM version:\n```yaml\n# Based on https://github.com/actions/starter-workflows/blob/main/pages/static.yml\nname: Build static & deploy to GitHub Pages\n\non:\n  # Runs on pushes targeting the default branch\n  push:\n    branches: [\"main\"]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n  # Allows this workflow to be called from other workflows\n  workflow_call:\n\n# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\n# Allow one concurrent deployment\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: true\n\njobs:\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          # Select latest ref instead of event trigger, in case this is triggered by another event\n          ref: ${{ github.ref }}\n      - uses: actions/setup-node@v4\n          \n      - name: Setup Pages\n        uses: actions/configure-pages@v5\n        \n      - name: Install pre-requirements\n        run: npm ci\n\n      - name: Build\n        run: npm run build\n        \n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          # Upload entire repository\n          path: 'dist/'\n\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n",
        "related": []
    },
    {
        "id": "using-directus-to-data-in-github-actions",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-27T17:35:43",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "DevOps",
            "GitHub-Actions"
        ],
        "problem": "Using directus-to-data in GitHub Actions",
        "solution": "```yml\n# .github/workflows/directus.yml\nname: Update data from Directus webhook\n\non:\n  workflow_dispatch:\n\nconcurrency:\n  group: directus\n  cancel-in-progress: true\n\njobs:\n  update-data:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    \n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n      \n      - name: Install dependencies\n        run: yarn install --immutable \n\n      # to generate files in src/\n      - name: Fetch data\n        run: yarn directus-to-data --collection-output src/_data/{{collectionName}}.json -c CollectionNameOne -c CollectionNameTwo\n        env:\n          CMS_URL: ${{ secrets.CMS_URL }}\n          STATIC_TOKEN: ${{ secrets.STATIC_TOKEN }}\n      \n      - uses: EndBug/add-and-commit@v9\n        with:\n          add: 'src/*'\n          default_author: github_actions\n          message: 'CMS update (${{ github.event.repository.updated_at}})'\n\n  deploy:\n    uses: ./.github/workflows/deploy.yml\n    needs: update-data\n    permissions:\n      contents: read\n      pages: write\n      id-token: write\n    secrets: inherit\n```",
        "related": [
            2
        ]
    },
    {
        "id": "allow-users-to-save-text-as-file-in-javascript",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-29T18:08:17",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "Based on Kanchu's code (stackoverflow.com)",
                "url": "https://stackoverflow.com/a/30832210"
            },
            {
                "label": "Example usage (github.com/Denperidge/cms-cheatsheet)",
                "url": "https://github.com/Denperidge/cms-cheatsheet/blob/47aab934f66d5472a7426dafeffcb6bff54f8b5e/src/static/sheet.js#L51"
            }
        ],
        "tags": [
            "JavaScript"
        ],
        "problem": "Allow users to save text as file in JavaScript",
        "solution": "```js\nconst text = document.querySelector(\"#text\");\nfunction onDownoadClick(e) {\n    const aElem = e.target;\n    if (!aElem.download) {\n        const lang = text.dataset.language;\n        let mimeType;\n        switch(lang) {\n            case \"javascript\":\n            case \"js\":\n                mimeType = \"text/javascript\"\n                break;\n            case \"html\":\n                mimeType = \"text/html\";\n                break;\n            case \"css\":\n                mimeType = \"text/css\";\n                break;\n            case \"json\":\n                mimeType = \"application/json\";\n                break;\n            default:\n                mimeType = \"text/plain\";\n                break;\n        }\n\n        const contents = new Blob([], {type: mimeType});\n        aElem.href = URL.createObjectURL(contents);\n        aElem.download = \"filename.\" + lang;\n    }\n}\n```\nThe code above will generate a file on click *and* allow the user to download it in one go. Furthermore, the generated data is saved for future presses of the button.",
        "related": []
    },
    {
        "id": "referring-to-a-users-uid-in-nixos",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-02T22:29:17",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "Adapted from l0b0's solution (unix.stackexchange.com)",
                "url": "https://unix.stackexchange.com/a/554329"
            }
        ],
        "tags": [
            "NixOS"
        ],
        "problem": "Referring to a user's UID in NixOS",
        "solution": "Please note:\n- If referring to a user's UID this way, the UID needs to be explicitly defined (see example below)\n- This example also shows how to convert the UID to a string for services that need it\n```nix\n{ config, pkgs, lib, ... }:\n\n{\n  users.users = {\n    exampleuser = {\n      uid = 1005;\n    };\n  };\n\n  virtualisation.oci-containers.containers = {\n    exampleservice = {\n      environment = { \n        PUID = builtins.toString config.users.users.exampleuser.uid;\n      };\n    };\n  };\n}\n```",
        "related": []
    },
    {
        "id": "python-sort-by-semantic-version",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-02T22:36:31",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "Solution by Eli Bendersky (stackoverflow.com)",
                "url": "https://stackoverflow.com/a/2574090"
            },
            {
                "label": "Example usage (github.com)",
                "url": "https://github.com/Denperidge/firefox-default-prefs-fetcher/blob/5179691b9b4bf626eae947dff03beb24f12b1074/src/firefox_default_prefs_fetcher/get_versions.py#L77"
            }
        ],
        "tags": [
            "Python"
        ],
        "problem": "Python: sort by semantic version",
        "solution": "```python\n[\"1.0.0\", \"2.1.2\", \"1.0.1\"].sort(reverse=True, key=lambda v: [int(n) for n in v.replace(\"esr\", \"\").split(\".\")])\n```",
        "related": []
    },
    {
        "id": "nixos-rebuild-specify-config",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-04T13:26:00",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "Adapted from jeremiah.emmer's example (discourse.nixos.org)",
                "url": "https://discourse.nixos.org/t/nixos-rebuild-how-to-specify-configuration-nix-when-attempting-to-build-deploy-remotely/30979/2"
            }
        ],
        "tags": [
            "NixOS"
        ],
        "problem": "nixos-rebuild: specify config",
        "solution": "```bash\nnixos-rebuild switch -I nixos-config=$(pwd)/configuration.nix\n```",
        "related": []
    },
    {
        "id": "esbuild-implementing-typescript",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-06T15:04:41",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "npm-run-all solution from Diogo Cardoso (stackoverflow.com)",
                "url": "https://stackoverflow.com/a/35455532"
            },
            {
                "label": "tsc -w parameter found from budhajeewa's answer (stackoverflow.com)",
                "url": "https://stackoverflow.com/a/66104668"
            },
            {
                "label": "Scripts based on ycjcl868's solution (github.com)",
                "url": "https://github.com/evanw/esbuild/issues/95#issuecomment-781863107"
            }
        ],
        "tags": [
            "TypeScript"
        ],
        "problem": "esbuild: Implementing TypeScript",
        "solution": "```json\n{\n  \"scripts\": {\n    \"start\": \"node dist/index.js\",\n    \"watch\": \"npm-run-all --parallel 'build:js --watch' 'build:types -w'\",\n    \"build\": \"npm-run-all --serial build:js build:types\",\n    \"build:js\": \"esbuild index.ts --bundle --outfile=dist/index.js --platform=node\",\n    \"build:types\": \"tsc --declaration index.ts --emitDeclarationOnly --outDir ./dist\",\n  },\n  \"devDependencies\": {\n    \"esbuild\": \"^0.24.0\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"typescript\": \"^5.7.2\"\n  },\n}\n```\nThis setup outputs Simply use `npm build` & `npm watch`",
        "related": []
    },
    {
        "id": "css-accessibility-classes",
        "status": "draft",
        "sort": null,
        "date_created": "2024-11-26T11:51:15",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "CSS",
            "Accessibility"
        ],
        "problem": "CSS accessibility classes: .sr-only & .skip-link",
        "solution": "```css\n/* Based on https://webaim.org/techniques/css/invisiblecontent/ & https://www.w3schools.com/accessibility/accessibility_skip_links.php */\n.sr-only {\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n.skip-link:focus {\n    left: 0;\n    top: 0;\n    width: auto;\n    height: auto;\n}\n\n.skip-link:link, .skip-link:visited, .skip-link:hover, .skip-link:active {\n    color: white;  /* Normalise the color */\n}\n```\n\n```html\n<!--\n    - Put this as the first element within <body> or <header>\n    - Remember to set <main id=\"main\"> \n-->\n<a class=\"sr-only skip-link\" href=\"#main\">Skip to main content</a>\n```",
        "related": []
    },
    {
        "id": "git-basics",
        "status": "published",
        "sort": null,
        "date_created": "2025-01-03T14:46:21",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "Git"
        ],
        "problem": "Git basics",
        "solution": "```bash\n# Add all changes to commit\ngit add .\n\n# Check changes that will be committed\ngit status\n\n# Commit with message\ngit commit -m \"Changed index.js\"\n\n# Push/pull changes to/from repository\ngit push\ngit pull\n\n# Store changes since last commit\ngit stash\n\n# Restore stashed changes\ngit stash pop\n\n# Reset your repository to the latest commit. WARNING: deletes files\ngit reset --hard HEAD\n```\n\n## Installation instructions:\n1. Download Git from [git-scm.com/downloads](https://git-scm.com/downloads)\n2. Run `git config --global user.name \"Your name\"` and `git config --global user.email youremail@example.com` (the e-mail should ideally match the one you use on Git(Hub/Lab/Tea)\n\n## Creating a new repository\n```sh\n# In the root directory of your code\ngit init\n\n# That's it! Now create a new repository on Git(Hub/Lab/Tea), and get the clone/git url\ngit remote add origin https://github.com/Denperidge/cms-cheatsheet.git\n\n```\n\n## Using an existing repository",
        "related": []
    },
    {
        "id": "node-js-built-in-https-request",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-07T13:43:22",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "Code based on Geshan Manandhar's solution (logrocket.com)",
                "url": "https://blog.logrocket.com/5-ways-make-http-requests-node-js/"
            },
            {
                "label": "Example usage (github.com)",
                "url": "https://github.com/Denperidge/eleventy-test/blob/298c838c5c16fe42a4e2ef91c3a356fe7c113969/src/index.ts#L22"
            }
        ],
        "tags": [
            "JavaScript"
        ],
        "problem": "Node.js: using the built-in https request functionality",
        "solution": "```js\nimport { get } from \"https\";\nget({\n    hostname: \"api.github.com\",\n    path: \"/repos/11ty/eleventy/tags\",\n    headers: {\n        \"User-Agent\": \"Mozilla/5.0\"\n    }\n}, (res)=> {\n    let data: Buffer[] = [];\n    res.on(\"data\", chunk => {\n        data.push(chunk);\n    }).on(\"end\", () => {\n        resolve(\n            JSON.parse(\n                Buffer.concat(data).toString(\"utf-\n            )\n        )\n    }).on(\"error\", (err) => {\n        throw err;\n    })\n});\n```",
        "related": []
    },
    {
        "id": "linux-toggle-display",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-29T19:39:16",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "Linux"
        ],
        "problem": "Linux: toggle display on or off",
        "solution": "Replace `DP-4`, `1920x1080` & `144.0` with your displays information\n```bash\nxrandr --listactivemonitors | grep DP-4; if [ $? -ne 0 ]; then xrandr --output DP-4 --mode 1920x1080 --rate 144.0; else xrandr --output DP-4 --off; fi\n```\n\nFor scale, the font sizing of Gnome Tweaks seems to do a better trick than `xrandr --scale`.",
        "related": []
    },
    {
        "id": "directus-to-data-basic-usage",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-23T18:27:38",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "Eleventy",
            "JavaScript"
        ],
        "problem": "directus-to-data: basic usage",
        "solution": "The following example. You can replace the `yarn` command with `npm run`\n```\n# package.json\n{\n  \"scripts\": {\n    \"data\": \"directus-to-data -c CollectionOne -c CollectionTwo --collection-output src/_data/{{collectionName}}.json\",\n    \"_schema\": \"directus-to-data -c CollectionOne -c CollectionTwo --collection-output NO_WRITE --assets-output NO_WRITE\",\n    \"schema:backup\": \"yarn _schema --backup-schema .directus.schema.json\",\n    \"schema:restore\": \"yarn _schema --restore-schema .directus.schema.json\",\n    \"schema:apply\": \"yarn schema:restore --apply-schema\"\n  }\n}\n\n# .directus.json\n{\n    \"cmsUrl\": \"https://cms.example.com\",\n    \"staticToken\": \"DAE_DOJ?1-edOJQHDS\"\n}\n```\n\nTo install, use the following command:\n```bash\n# npm\nnpm install --save-dev directus-to-data\n# Yarn\nyarn add -D directus-to-data\n```",
        "related": []
    },
    {
        "id": "implementing-eleventy-sass",
        "status": "draft",
        "sort": null,
        "date_created": "2024-12-03T13:47:20",
        "date_updated": "2025-06-21T15:27:12",
        "links": [
            {
                "label": "Example usage (github.com)",
                "url": "https://github.com/Denperidge/denperidge.github.io/blob/6e32666881455992f7612f2569bfc8926128d605/.eleventy.js#L8"
            }
        ],
        "tags": [
            "Eleventy",
            "JavaScript",
            "SCSS"
        ],
        "problem": "Implementing eleventy-sass",
        "solution": "```js\nimport * as sass from \"sass\";\nimport eleventySass from \"@grimlink/eleventy-plugin-sass\";\n\nmodule.exports = function (eleventyConfig) {\n    eleventyConfig.addPlugin(eleventySass, {\n        sass,\n        outputPath: \"\",   // Optional subdirectory\n        includePaths: [\"node_modules\"]\n    });\n}\n```\n\nTo install, run\n```bash\n# NPM\nnpm install --save-dev sass @grimlink/eleventy-plugin-sass\n# Yarn\nyarn add -D sass @grimlink/eleventy-plugin-sass\n```",
        "related": [
            4
        ]
    },
    {
        "id": "github-actions-js-test",
        "status": "draft",
        "sort": null,
        "date_created": "2025-03-20T16:08:22",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "DevOps",
            "GitHub-Actions",
            "JavaScript"
        ],
        "problem": "GitHub Actions: run JavaScript tests",
        "solution": "Note: the first example uses npm. For Yarn, see below\n\nNPM:\n```yml\n# .github/workflows/test.yml\nname: Run tests\n\non: [ push, pull_request, workflow_call ]\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n      - run: npm ci\n      - run: npm test\n```\n\n\nUsing it in other workflows:\n```yml\n# .github/workflows/publish.yml\nname: Publish npm package\n\non:\n  push:\n    tags:\n      - \"*\"\n\njobs:\n  test:\n    uses: ./.github/workflows/test.yml\n\n  github-release:\n    runs-on: ubuntu-latest\n    needs: [test]\n    steps:\n      # ...\n```\n\n\n\nYarn:\n```yml\n# .github/workflows/test.yml\nname: Run tests\n\non: [ push, pull_request, workflow_call ]\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n      - run: yarn install --immutable \n      - run: yarn test\n```\n\nYarn:\n```yml\n# .github/workflows/test.yml\nname: Run tests\n\non: [push, pull_request, workflow_call]\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n      - run: yarn install --immutable \n      - run: yarn test\n```",
        "related": []
    },
    {
        "id": "github-actions-js-publish-to-npm-and-gh-releases",
        "status": "draft",
        "sort": null,
        "date_created": "2025-03-20T16:13:22",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "DevOps",
            "GitHub-Actions",
            "JavaScript"
        ],
        "problem": "GitHub Actions: publish a JavaScript package to NPM & GitHub Releases",
        "solution": "Set `NPM_TOKEN` in **Repository Secrets** (see `https://github.com/org/repo/settings/secrets/actions`)\n\nNpm:\n```yml\n# .github/workflows/publish.yml\nname: Publish package on npm & GitHub\n\non:\n  push:\n    tags:\n      - \"*.*.*\"\n\njobs:\n  github-release:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n      - uses: ncipollo/release-action@v1.14.0\n        with:\n          artifacts: filename.js\n\n  npm-publish:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n        with:\n          registry-url: https://registry.npmjs.org/\n      - run: npm ci\n      - run: npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n```\n\nYarn:\n```yml\n# .github/workflows/publish.yml\nname: Publish package on npm & GitHub\n\non:\n  push:\n    tags:\n      - \"*.*.*\"\n\njobs:\n  github-release:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n      - uses: ncipollo/release-action@v1.14.0\n        with:\n          artifacts: filename.js\n\n  npm-publish:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: actions/setup-node@v4\n        with:\n          registry-url: https://registry.npmjs.org/\n      - run: yarn install --immutable \n      - run: yarn build\n      - run: yarn publish\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n```",
        "related": []
    },
    {
        "id": "js-enter-on-button-label",
        "status": "draft",
        "sort": null,
        "date_created": "2025-03-22T12:16:59",
        "date_updated": "2025-06-21T15:27:12",
        "links": null,
        "tags": [
            "Accessibility",
            "JavaScript"
        ],
        "problem": "JavaSript: allow Enter to be used on button labels",
        "solution": "```js\nfunction enableEnterOnButtonLabels () {\n    const buttonLabels = document.querySelectorAll(\"label[role='button']\")\n    for (let i = 0; i < buttonLabels.length; i++) {\n        buttonLabels[i].addEventListener(\"keyup\", (e) => {\n            if (e.code == \"Enter\") {\n                e.target.click();\n            }\n        });\n    }\n}\n```",
        "related": []
    },
    {
        "id": "nixos-mounting-multiple-hetzner-storageboxes",
        "status": "published",
        "sort": null,
        "date_created": "2025-06-21T15:47:25",
        "date_updated": "2025-06-21T15:48:42",
        "links": null,
        "tags": [
            "NixOS"
        ],
        "problem": "NixOS: mounting multiple Hetzner storageboxes",
        "solution": "```nix\n{\n  # ...\n  fileSystems = builtins.mapAttrs (name: value: {\n    device = \"//${value.storageUser}.your-storagebox.de/${value.storageUser}\";\n    fsType = \"cifs\";\n      mountPoint = name;\n      options = [\n        # https://wiki.nixos.org/wiki/Samba#CIFS_mount_configuration\n        \"x-systemd.automount\"\n        \"noauto\"\n        \"x-systemd.idle-timeout=60\"\n        \"x-systemd.device-timeout=5s\"\n        \"x-systemd.mount-timeout=5s\"\n        \"credentials=${value.credentials}\"\n        # https://docs.hetzner.com/robot/storage-box/access/access-samba-cifs#encrypt-samba-connection\n        \"iocharset=utf8\"\n        \"rw\"\n        \"nofail\"\n        \"seal\"\n        # Custom\n        \"mfsymlinks\"\n        \"uid=${value.uid}\"\n        \"gid=${value.gid}\"\n        \"file_mode=0740\"\n        \"dir_mode=0740\"\n      ];\n  }) {\n    \"/mnt/storage-1\" = {\n      storageUser = \"uxxxxxx-sub1\";\n      credentials = \"/home/user/sb-1.conf\";\n      uid = builtins.toString config.users.users.foo.uid;\n      gid = builtins.toString config.users.groups.users.gid;\n    };\n    \"/mnt/storage-2\" = {\n      storageUser = \"uxxxxxx-sub2\";\n      credentials = \"/home/user/sb-2.conf\";\n      uid = builtins.toString config.users.users.bar.uid;\n      gid = builtins.toString config.users.groups.users.gid;\n    };\n    \"/mnt/storage-2\" = {\n      storageUser = \"uxxxxxx-sub4\";\n      credentials = \"/home/user/sb-3.conf\";\n      uid = builtins.toString config.users.users.example.uid;\n      gid = builtins.toString config.users.groups.users.gid;\n    };\n  };\n  # ...\n}\n```",
        "related": []
    },
    {
        "id": "nixos-remote-rebuild",
        "status": "published",
        "sort": null,
        "date_created": "2025-06-23T10:17:50",
        "date_updated": "2025-06-23T10:22:18",
        "links": null,
        "tags": [
            "NixOS"
        ],
        "problem": "NixOS: Remote rebuild",
        "solution": "Remote/target server configuration.nix:\n```nix\n{\n    nix.settings.trusted-users = [ \"yourname\" ];\n}\n```\nMake sure to use `nixos-rebuild switch` at least once after adding this line, otherwise it won't take effect and your remote build will be blocked.\n\n\nDevice to build on:\n```sh\nnixos-rebuild switch --use-remote-sudo --target-host yourname@example.com -I nixos-config=$(pwd)/configuration.nix\n``\n",
        "related": []
    },
    {
        "id": "nixos-securely-passing-env-vars-with-caddy-quickstart",
        "status": "draft",
        "sort": null,
        "date_created": "2025-06-23T10:42:20",
        "date_updated": null,
        "links": null,
        "tags": [
            "NixOS"
        ],
        "problem": "NixOS: securely passing environment variables w/ Caddy quickstart",
        "solution": "Nix will - sadly - **expose** any direct **text** passed in your **nix files**. To circumvent this for sensitive data, secret managing schemes can be used.\n\n```nix\nservices.caddy = {\n    enable = true;\n    package = pkgs.caddy.withPlugins {\n      plugins = [ \"github.com/caddy-dns/porkbun@v0.3.1\" ];\n      hash = \"sha256-YZ4Bq0hfOJpa0C2lKipEY4fqwzJbEFM7ci5ys9S3uAo=\";\n    };\n    globalConfig = ''\n        acme_dns porkbun {\n            api_key {$CADDY_API_KEY}\n            api_secret_key {$CADDY_API_SECRET_KEY}\n        }\n    '';\n    virtualHosts = {\n        \"example.com\".extraConfig = ''\n          reverse_proxy 127.0.0.1:5000\n        '';\n    };\n};\nsystemd.services.caddy.serviceConfig.EnvironmentFile = [\"/path/to/.env.caddy\"];\n```\n\n```ini\n# /path/to/.env.caddy\nCADDY_API_KEY=YOUR_KEY\nCADDY_API_SECRET_KEY=YOUR_OTHER_KEY\n```",
        "related": []
    },
    {
        "id": "nixos-import-nix-files",
        "status": "published",
        "sort": null,
        "date_created": "2025-06-23T13:55:41",
        "date_updated": null,
        "links": null,
        "tags": [
            "NixOS"
        ],
        "problem": "NixOS: Import nix files",
        "solution": "```nix\n# configuration.nix\n# _module.args import\n{ config, lib, pkgs, ssh_keys, ... }:\n\n{\n  # File import itself\n  imports = [\n    ./base-config.nix\n  ];\n  \n  users.users.yourname = {\n    uid = 1001;\n    isNormalUser = true;\n    extraGroups = [ \"wheel\" ];\n    openssh.authorizedKeys.keys = ssh_keys;\n    packages = with pkgs; [\n      htop\n    ] ++ extraPackages;\n  };\n}\n```\n```nix\n# base-config.nix\n{ config, pkgs, ... }:\n\n{\n  _module.args = {\n    # If this file is imported, the following imports become available\n    ssh_keys = [ \"ssh-ed25519 +5MWqxhi... user@device\"  \"ssh-ed25519 AAAA... user2@device2\"];\n    \n    extraPackages = (with pkgs; [\n      ffmpeg-full\n    ]);\n  };\n\n  # If this file is imported, the settings below will be applied to your configuration automatically\n  services.xserver.xkb = {\n    layout = \"be\";\n    variant = \"nodeadkeys\";\n  };\n\n  time.timeZone = \"Europe/Brussels\";\n  i18n.defaultLocale = \"en_GB.UTF-8\";\n  console.keyMap = \"be-latin1\";  # Configure console keymap\n}\n```",
        "related": []
    },
    {
        "id": "nixos-basic-commands",
        "status": "published",
        "sort": null,
        "date_created": "2025-06-23T13:59:34",
        "date_updated": "2025-06-23T14:02:12",
        "links": [
            {
                "label": "Find packages & NixOS options on search.nixos.org",
                "url": "https://search.nixos.org/packages"
            },
            {
                "label": "Find a bunch of examples on wiki.nixos.org",
                "url": "https://wiki.nixos.org/wiki/NixOS_Wiki"
            },
            {
                "label": "Find the NixOS manual on nixos.org/manual/nixos/stable/",
                "url": "https://nixos.org/manual/nixos/stable/"
            }
        ],
        "tags": [
            "NixOS"
        ],
        "problem": "NixOS: basic commands",
        "solution": "```sh\n# Apply /etc/configuration.nix immediately\nsudo nixos-rebuild switch\n# Apply /etc/configuration.nix on next boot\nsudo nixos-rebuild boot\n\n# Create a temporary shell environment with the specified packages \nnix-shell -p wget nodejs_22 yarn\n```",
        "related": [
            7,
            8
        ]
    },
    {
        "id": "meow",
        "status": "archived",
        "sort": null,
        "date_created": "2025-06-23T20:47:03",
        "date_updated": "2025-06-23T20:50:25",
        "links": null,
        "tags": null,
        "problem": null,
        "solution": null,
        "related": []
    },
    {
        "id": "git-signing-commits-with-ssh",
        "status": "published",
        "sort": null,
        "date_created": "2025-07-01T14:52:47",
        "date_updated": "2025-07-01T15:01:56",
        "links": null,
        "tags": [
            "Git"
        ],
        "problem": "Git: Signing commits with an SSH key",
        "solution": "## Setup repo\n```bash\n# Setup repo with signing\nusername=\"MyUsername\"\nemail=\"MyEmail\"\nsshkey=\"~/.ssh/filename_id_ed25519.pub\"\nscope=\"local\"\n\n# Replace --$scope with global to apply globally\ngit config --$scope user.name $username\ngit config --$scope user.email $email\ngit config --$scope gpg.format ssh\ngit config --$scope user.signingKey $sshkey\n```\n\n## Setup Git host\n- Codeberg:  [Profile SSH settings](https://codeberg.org/user/settings/keys) & [relevant documentation](https://docs.codeberg.org/security/ssh-key/)\n- GitHub: [Profile SSH settings](https://github.com/settings/keys) & [relevant documentation](https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits)",
        "related": []
    }
]